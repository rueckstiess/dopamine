Testing Episode class from tools.episode
=====================================================================


Test if import works
---------------------------------------------------------------------
>>> from dopamine.tools import Episode
>>> d = Episode(3, 2)


Test __len__() function
---------------------------------------------------------------------
>>> len(d)
0


Test __append__() function
---------------------------------------------------------------------
>>> d.append([1, 2, 3], [1, 2], [1])
>>> len(d)
1
>>> d.append([1, 2, 3], [1, 2], 1)
>>> len(d)
2


Test states, actions, rewards properties
---------------------------------------------------------------------
>>> d.states
array([[ 1.,  2.,  3.],
       [ 1.,  2.,  3.]])
>>> d.actions
array([[ 1.,  2.],
       [ 1.,  2.]])
>>> d.rewards
array([ 1.,  1.])


Test stateDim, actionDim properties
---------------------------------------------------------------------
>>> d.stateDim
3
>>> d.actionDim
2


Test __getitem__() function
---------------------------------------------------------------------
>>> d[1]
(array([ 1.,  2.,  3.]), array([ 1.,  2.]), 1.0)


Test extend() function
---------------------------------------------------------------------
>>> d2 = Episode(3, 2)
>>> d2.append([4, 5, 6], [4, 5], 4)
>>> d.extend(d2)
>>> len(d)
3
>>> d.actions
array([[ 1.,  2.],
       [ 1.,  2.],
       [ 4.,  5.]])
>>> len(d2)
1
>>> d2.actions
array([[ 4.,  5.]])


Test __iter__() function
---------------------------------------------------------------------
>>> for s, a, r, ns in d:
...     print s, a, r, ns
... 
[ 1.  2.  3.] [ 1.  2.] 1.0 [ 1.  2.  3.]
[ 1.  2.  3.] [ 1.  2.] 1.0 [ 4.  5.  6.]
[ 4.  5.  6.] [ 4.  5.] 4.0 [ 4.  5.  6.]


Test clear() function
---------------------------------------------------------------------
>>> d2.clear()
>>> len(d2)
0


Test __str__() function
---------------------------------------------------------------------
>>> print d
[ 1.  2.  3.][ 1.  2.] 1.0
[ 1.  2.  3.][ 1.  2.] 1.0
[ 4.  5.  6.][ 4.  5.] 4.0


